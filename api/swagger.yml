swagger: '2.0'
info:
  version: 1.0.0
  title: ApiService
  description: API
schemes:
  - "http"
host: "127.0.0.1:18890"
basePath: "/api"
produces:
  - "application/json"
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /login:
    get:
      description: 'Login With Discord'
      operationId: 'login'
      tags: [user]
      responses:
        302:
          description: 'Redirect'
          headers:
            Location:
              type: string
              format: url

  /auth:
    get:
      description: 'Auth With Discord'
      operationId: 'auth'
      tags: [user]
      parameters:
        - name: code
          in: query
          description: 'Discord Code'
          required: true
          type: string
        - name: state
          in: query
          description: 'Discord State'
          required: true
          type: string
      responses:
        302:
          description: 'Redirect'
          headers:
            Location:
              type: string
              format: url

  /user_info:
    get:
      description: 'Get User Info'
      operationId: 'user_info'
      tags: [user]
      security:
        - Bearer: []
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/UserInfo'
  /user_list:
    post:
      description: 'Get User List'
      operationId: 'user_list'
      tags: [admin]
      security:
        - Bearer: []
      parameters:
        - name: body
          in: body
          description: 'Page Info'
          required: true
          schema:
            properties:
              query:
                $ref: '#/definitions/UserQuery'
              page_info:
                $ref: '#/definitions/PageInfoRequest'
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/UserList'
  /user_history:
    post:
      description: 'Get User History'
      operationId: 'user_history'
      tags: [user]
      security:
        - Bearer: []
      parameters:
        - name: body
          in: body
          description: 'Page Info'
          required: true
          schema:
            properties:
              query:
                $ref: '#/definitions/HistoryQuery'
              page_info:
                $ref: '#/definitions/PageInfoRequest'
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/HistoryList'
  /community_history:
    post:
      description: 'Get Community History'
      operationId: 'community_history'
      tags: [user]
      security:
        - Bearer: []
      parameters:
        - name: body
          in: body
          description: 'Page Info'
          required: true
          schema:
            properties:
              query:
                $ref: '#/definitions/HistoryQuery'
              page_info:
                $ref: '#/definitions/PageInfoRequest'
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/HistoryList'
  /discord_server:
    get:
      description: 'Get Discord Server'
      operationId: 'discord_server'
      tags: [system]
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/DiscordServer'
  /open_discord_server:
    get:
      description: 'Open Discord Server'
      operationId: 'open_discord_server'
      tags: [system]
      responses:
        302:
          description: 'Open Discord Servers'
          headers:
            Location:
              type: string
              format: url
  /cluster:
    get:
      description: 'Get Cluster Info'
      operationId: 'cluster'
      tags: [system]
      security:
        - Bearer: []
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/ClusterInfo'
  /set_user_private:
    post:
      description: 'Set User Private'
      operationId: 'set_user_private'
      tags: [admin]
      security:
        - Bearer: []
      parameters:
        - name: body
          in: body
          description: 'Set User Private'
          required: true
          schema:
            properties:
              user_id:
                type: string
              is_private:
                type: boolean
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/BaseResponse'
  /set_user_enable:
    post:
      description: 'Set User Enable'
      operationId: 'set_user_enable'
      tags: [admin]
      security:
        - Bearer: []
      parameters:
        - name: body
          in: body
          description: 'Set User Enable'
          required: true
          schema:
            properties:
              user_id:
                type: string
              is_enable:
                type: boolean
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/BaseResponse'
          

definitions:
  UserItem:
    type: object
    properties: 
      id:
        type: string
      username:
        type: string
      avatar:
        type: string
      enable:
        type: boolean
        x-omitempty: false
      is_private:
        type: boolean
        x-omitempty: false
      stable_config:
        type: object
      roles:
        type: string
      created:
        type: string
      image_count:
        type: integer
        format: int32
        x-omitempty: false
  PageInfoRequest:
    type: object
    properties: 
      page:
        type: integer
        format: int32
      page_size:
        type: integer
        format: int32
  PageInfoResponse:
    type: object
    properties: 
      page:
        type: integer
        format: int32
      page_size:
        type: integer
        format: int32
      total:
        type: integer
        format: int32
  UserInfo:
    type: object
    properties: 
      code:
        type: integer
        format: int32
        x-omitempty: false
      message:
        type: string
      data:
        type: object
        x-omitempty: false
        properties:
          user:
            $ref: '#/definitions/UserItem'
  UserList:
    type: object
    properties: 
      code:
        type: integer
        format: int32
        x-omitempty: false
      message:
        type: string
      data:
        type: object
        x-omitempty: false
        properties:
          users:
            type: array
            items:
              $ref: '#/definitions/UserItem'
          page_info:
            $ref: '#/definitions/PageInfoResponse'
  HistoryList:
    type: object
    properties: 
      code:
        type: integer
        format: int32
        x-omitempty: false
      message:
        type: string
      data:
        type: object
        x-omitempty: false
        properties:
          history:
            type: array
            items:
              $ref: '#/definitions/HistoryItem'
          page_info:
            $ref: '#/definitions/PageInfoResponse'
  UserQuery:
    type: object
    properties: 
      id:
        type: string
      username:
        type: string
      only_enable:
        type: boolean
      
  HistoryQuery:
    type: object
    properties: 
      command:
        type: string
  HistoryItem:
    type: object
    properties: 
      id:
        type: string
      user_id:
        type: string
      user_name:
        type: string
      user_avatar:
        type: string
      command:
        type: string
      options:
        type: object
      images:
        type: array
        items:
          type: string
      images_blurhash:
        type: array
        items:
          type: string
      created:
        type: string
  NodeItem:
    type: object
    properties:
      name:
        type: string
      host:
        type: string
      max_concurrent:
        type: integer
        format: int32
        x-omitempty: false
      running:
        type: integer
        format: int32
        x-omitempty: false
      pending:
        type: integer
        format: int32
        x-omitempty: false
  DiscordServer:
    type: object
    properties:
      code:
        type: integer
        format: int32
        x-omitempty: false
      message:
        type: string
      data:
        type: object
        x-omitempty: false
        properties: 
          url:
            type: string
  ClusterInfo:
    type: object
    properties:
      code:
        type: integer
        format: int32
        x-omitempty: false
      message:
        type: string
      data:
        type: object
        x-omitempty: false
        properties: 
          cluster:
            type: array
            items: 
              $ref: '#/definitions/NodeItem'
  BaseResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
        x-omitempty: false
      message:
        type: string
    
      